----------------------------------------------------------------------------------------------------------------
1、统一同步本地接口版本与云平台版本的逻辑：
|--接口库都必须在代码中固化版本；
|--互动模块起来时首先获取服务器存储的库的版本，然后跟本地版本比对，如果不一致，则提示用户更新库，同意则获取云平
   台上的最新库，并替换掉本地的库；
|--获取到库后并不是立马就替换，需要用指定的算法进行解密验证，无误方可更新，否则丢弃，并提示错误原因；
|--本地更新可以设置“自动更新”，也可以有更新提示用户进行手动更新
----------------------------------------------------------------------------------------------------------------
2、接口的实现：
1、以虚函数的形式提供所有必须的服务接口，并按本地逻辑实现一遍；
2、所有使用方，应该用JNVRtcSDK实现一个子类，应该命名为XXXEngine（XXX引擎）；
3、当OEM厂商SDK（简称OEMSDK）包含对应的命令接口时，重新编写子类对应的接口（接口实现中使用OEMSDK的接口），然后
   覆盖JNVRtcSDK中的接口；
4、所有的消息和状态全部都使用JNVRtcSDK进行通知，即使是通知自己的消息，也用向指定用户发信的形式，指定发送给自己，只
   是JNVRtcSDK发现是发给自己的消息时，就不转发给Cloud了，直接触发本地回调，对应逻辑在回调中开始处理；
5、由于JNVRtcSDK同时面对多家OEM，所以内部无法提供单例模式的引擎，单例模式需要上层实现子类时进行实现；
6、所有用户默认都是听讲，然后由主讲（或其他控制者）更新角色类型
----------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------
需要实现的服务接口：
1、对房间进行操作
|--创建房间；
|--退出房间；
|--解散房间；
|--剔出房间；
|--请求加入房间；
|--取消加入房间请求；
|--申请发言；
|--设置用户角色；
|--广播视频；
|--查看视频；
|--广播音频；
|--单独对话（查看音频）；
|--申请主讲权限
|--获取房间信息（通过用户ID/房间ID）；
|--连接异常：登录房间异常/登录服务器异常
----------------------------------------------------------------------------------------------------------------
2、向用户发起操作
|--拒绝请求加入；
|--同意加入请求；
|--邀请加入房间；
|--取消邀请加入房间；
|--拒绝邀请加入；
|--同意加入邀请；
|--邀请发言；
|--拒绝发言邀请；
|--同意发言邀请
|--拒绝发言申请；
|--同意发言申请
----------------------------------------------------------------------------------------------------------------

需要提供的回调接口：
1、房间内事件（基本是被广播的事件）：
|--创建房间；
|--对应用户ID的房间信息；
|--对应房间ID的房间信息；
|--退出房间（自己或别人）；
|--解散房间；
|--剔除房间（自己或别人）；
|--用户加入；
|--用户离开；
|--用户角色更新；
|--音频状态更新；
|--视频状态更新；

2、针对某人的事件：
|--你被邀请加入房间
|--请求加入你房间；
|--有人取消加入你房间（在未响应时发起者取消）；
|--有人取消邀请你加入房间（在未响应时发起者取消）；
|--有人申请发言权限；
|--有人申请主讲权限；

3、针对某人的操作被响应：
|--对方同意加入房间请求；
|--对方拒绝拒绝你加入房间；
|--对方同意邀请；
|--对方拒绝邀请；
|--对方同意你的发言请求；
|--对方拒绝你的发言请求
|--对方同意你的主讲申请；
|--对方拒绝你的主讲申请



----------------------------------------------------------------------------------------------------------------
平台需要维护的数据表：
1、房间信息表；
|--为设备端查询房间信息提供支持；
2、用户信息表-为了效率应该使用嘻哈表；
|--为设备端获取用户信息提供支持；
2、每个房间中的用户表；
|--为设备获取房间内所有用户信息提供支持；
3、待在大厅，但为进入房间的用户表；
|--为列出在大厅用户信息表提供支持；
|--为某人邀请某人时，如果对方不在大厅，将不在大厅信息准确告知邀请方；
|--虽然能知道被邀请方不在大厅，但信息应该照样下发，至于被邀请方要不
   要收到提示信息，或者是否能离开当前房间进入新的房间，都有具体的业务逻辑控制；
4、进入房间的用户表；
|--暂时不知道用途
----------------------------------------------------------------------------------------------------------------